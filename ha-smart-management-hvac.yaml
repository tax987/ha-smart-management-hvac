blueprint:
  name: "Smart Climate Management v1.5.2 / Gestione Clima Smart v1.5.2"
  description: "Manages the air conditioner to maintain the target temperature, turning off or switching to fan mode, and reactivating if the temperature rises. Includes a master switch and configurable timers. / Gestisce il climatizzatore per mantenere la temperatura target, spegnendosi o passando alla ventola, e riattivandosi se la temperatura sale. Include un master switch e timer configurabili."
  domain: automation
  author: Massimo Querzolo
  source_url: https://github.com/tax987/ha-smart-management-hvac/blob/v1.5.2/ha-smart-management-hvac.yaml
  input:
    master_enable:
      name: "Enable Smart Management / Abilita Gestione Smart"
      description: "Select the switch (input_boolean) to fully enable or disable the smart climate management. / Seleziona l'interruttore (input_boolean) per attivare o disattivare completamente la gestione intelligente del clima."
      selector:
        entity:
          domain: input_boolean
          multiple: false
    climate_entity:
      name: "Air Conditioner / Climatizzatore"
      selector:
        entity:
          domain: climate
    temperature_sensor:
      name: "Ambient Temperature Sensor / Sensore Temperatura Ambiente"
      selector:
        entity:
          domain: sensor
          device_class: temperature
    target_temperature:
      name: "Target Temperature (°C) / Temperatura Target (°C)"
      description: "The desired temperature. / La temperatura desiderata."
      selector:
        number:
          min: 16
          max: 30
          step: 0.5
          unit_of_measurement: "°C"
          mode: box
    turn_off_offset:
      name: "Turn Off/Fan Offset (°C) / Offset Spegnimento/Ventola (°C)"
      description: "How many degrees the temp. must DROP below the target before mode change (e.g., 1°C). / Di quanti gradi la temp. deve SCENDERE sotto il target prima del cambio modalità (es. 1°C)."
      default: 1
      selector:
        number:
          min: 0.1
          max: 5
          step: 0.1
          unit_of_measurement: "°C"
          mode: box
    turn_on_offset:
      name: "Climate Reactivation Offset (°C) / Offset Riattivazione Clima (°C)"
      description: "How many degrees the temp. must RISE above the target before reactivation (e.g., 1.5°C). / Di quanti gradi la temp. deve SALIRE sopra il target prima della riattivazione (es. 1.5°C)."
      default: 1.5
      selector:
        number:
          min: 0.1
          max: 5
          step: 0.1
          unit_of_measurement: "°C"
          mode: box
    initial_climate_mode:
      name: "Initial Climate Mode / Modalità Iniziale Clima"
      description: "The operating mode when the climate activates (e.g., 'cool', 'heat', 'heat_cool'). / La modalità operativa quando il clima si attiva (es. 'cool', 'heat', 'heat_cool')."
      selector:
        select:
          options:
            - "auto"
            - "cool"
            - "heat"
            - "heat_cool"
            - "dry"
            - "fan_only"
            - "off"
          mode: dropdown
    low_power_mode:
      name: "Low Power Mode / Modalità a Basso Consumo"
      description: "The mode the climate switches to upon reaching the target (e.g., 'fan_only', 'off'). / La modalità in cui il clima passa al raggiungimento del target (es. 'fan_only', 'off')."
      selector:
        select:
          options:
            - "dry"
            - "fan_only"
            - "off"
          mode: dropdown
    turn_off_timer_eco:
      name: "Low Power Turn Off Timer (minutes) / Timer Spegnimento Basso Consumo (minuti)"
      description: "Timer in minutes to turn off the unit after entering low power mode. Set to 0 to disable. / Timer in minuti per spegnere l'unità dopo essere entrata in modalità a basso consumo. Imposta a 0 per disabilitare."
      selector:
        number:
          min: 0
          max: 120
          step: 1
          unit_of_measurement: "minutes"
          mode: slider
      default: 0
    start_time:
      name: "Start Time (optional) / Orario Inizio (opzionale)"
      description: "The time when management activates (e.g., 23:00). Leave blank for manual activation. / L'ora in cui la gestione si attiva (es. 23:00). Lascia vuoto per attivazione manuale."
      selector:
        time:
      default: null
    end_time:
      name: "End Time (optional) / Orario Fine (opzionale)"
      description: "The time when management should end (e.g., 07:00). Leave blank for manual deactivation. / L'ora a cui la gestione deve terminare (es. 07:00). Lascia vuoto per disattivazione manuale."
      selector:
        time:
      default: null
    end_of_time_action:
      name: "End of Time Action / Azione a Fine Temporizzazione"
      description: "Choose the action to perform at the end of the time window. / Scegli l'azione da eseguire al termine dell'orario."
      selector:
        select:
          options:
            - "off"
            - "dry"
            - "cool"
            - "fan_only"
            - "auto"
          mode: dropdown
      default: "off"
    turn_off_timer_end:
      name: "End of Time Turn Off Timer (minutes) / Timer Spegnimento a Fine Orario (minuti)"
      description: "Timer in minutes to turn off the unit at the end of the period. Set to 0 to disable. / Timer in minuti per spegnere l'unità alla fine del periodo. Imposta a 0 per disabilitare."
      selector:
        number:
          min: 0
          max: 120
          step: 1
          unit_of_measurement: "minutes"
          mode: slider
      default: 0
    enable_notifications:
      name: "Enable Notifications / Abilita Notifiche"
      description: "Enable or disable sending notifications. / Attiva o disattiva l'invio di notifiche."
      selector:
        boolean:
    notification_service:
      name: "Notification Service / Servizio Notifica"
      description: "Enter the name of the notification service (e.g., 'notify.mobile_app_your_phone'). / Inserisci il nome del servizio di notifica (es. 'notify.mobile_app_your_phone')."
      selector:
        text:
      default: "notify.persistent_notification"
    language:
      name: "Notification Language / Lingua Notifiche"
      description: "Select the language for status notifications. / Seleziona la lingua per le notifiche di stato."
      default: "en"
      selector:
        select:
          options:
            - name: "🇺🇸 English"
              value: "en"
            - name: "🇮🇹 Italiano"
              value: "it"
      
variables:
  master_enable: !input master_enable
  climate_entity: !input climate_entity
  temp_sensor: !input temperature_sensor
  target_temp: !input target_temperature
  turn_off_offset: !input turn_off_offset
  turn_on_offset: !input turn_on_offset
  turn_off_temp: "{{ states(temp_sensor) | float(0) <= (target_temp - turn_off_offset) }}"
  turn_on_temp: "{{ states(temp_sensor) | float(0) >= (target_temp + turn_on_offset) }}"
  initial_mode: !input initial_climate_mode
  low_power_mode: !input low_power_mode
  enable_notifications: !input enable_notifications
  notification_service: !input notification_service
  input_start_time: !input start_time
  input_end_time: !input end_time
  end_of_time_action: !input end_of_time_action
  turn_off_timer_eco: !input turn_off_timer_eco
  turn_off_timer_end: !input turn_off_timer_end
  language: !input language

trigger:
  - platform: state
    entity_id: !input temperature_sensor
    id: "temperature_change" 
  - platform: homeassistant
    event: start
    id: "ha_start" 
  - platform: time
    at: !input start_time
    enabled: "{{ iif(input_start_time is not none, true, false) }}"
    id: "time_start"
  - platform: time
    at: !input end_time
    enabled: "{{ iif(input_end_time is not none, true, false) }}"
    id: "time_end"
  - platform: time_pattern
    minutes: "/5"
    id: "time_periodic_check"
    enabled: "{{ iif(input_start_time is not none and input_end_time is not none, true, false) }}"
  - platform: state
    entity_id: !input master_enable
    to: "on"
    id: "master_enable_on"
  - platform: state
    entity_id: !input master_enable
    to: "off"
    id: "master_enable_off"
  - platform: state
    entity_id: !input climate_entity
    to: "off"
    from:
      - "cool"
      - "heat"
      - "dry"
      - "fan_only"
      - "heat_cool"
      - "auto"
    id: "climate_off_manual"
    
condition: []

action:
  - choose:
      # Azioni per l'accensione manuale, sempre eseguite
      - conditions:
          - condition: trigger
            id: "master_enable_on"
        sequence:
          - service: "climate.set_hvac_mode"
            data:
              hvac_mode: "{{ initial_mode }}"
            target:
              entity_id: "{{ climate_entity }}"
          - delay:
              seconds: 2
          - if:
              - condition: template
                value_template: "{{ initial_mode in ['cool', 'heat', 'auto', 'heat_cool'] }}"
            then:
              - service: "climate.set_temperature"
                data:
                  temperature: "{{ target_temp }}"
                target:
                  entity_id: "{{ climate_entity }}"
          - if: "{{ enable_notifications and notification_service is not none and notification_service != '' }}"
            then:
              - choose:
                - conditions:
                    - condition: template
                      value_template: "{{ language == 'en' }}"
                  sequence:
                    - service: "{{ notification_service }}"
                      data:
                        title: "Smart Climate Management"
                        message: >
                          ✅ Smart Climate Management enabled on {{ state_attr(climate_entity, 'friendly_name') }}.
                          The automation will start {{ 'at ' ~ input_start_time if input_start_time is not none else 'manually' }}
                          in {{ initial_mode }} mode and will end {{ 'at ' ~ input_end_time if input_end_time is not none else 'manually' }}
                          switching to {{ end_of_time_action }} mode.
                - conditions:
                    - condition: template
                      value_template: "{{ language == 'it' }}"
                  sequence:
                    - service: "{{ notification_service }}"
                      data:
                        title: "Gestione Clima Smart"
                        message: >
                          ✅ Attivato Gestione Clima Smart su {{ state_attr(climate_entity, 'friendly_name') }}.
                          L'automazione si avvierà {{ 'alle ' ~ input_start_time if input_start_time is not none else 'manualmente' }}
                          con modalità {{ initial_mode }} e terminerà {{ 'alle ' ~ input_end_time if input_end_time is not none else 'manualmente' }}
                          passando a modalità {{ end_of_time_action }}.
            else:
              - service: system_log.write
                data:
                  message: "Tentativo di notifica all'attivazione manuale fallito: servizio di notifica non valido o non configurato."
                  level: warn

      # Azione per lo spegnimento manuale, sempre eseguita
      - conditions:
          - condition: trigger
            id: "master_enable_off"
        sequence:
          - if: "{{ enable_notifications and notification_service is not none and notification_service != '' }}"
            then:
              - choose:
                - conditions:
                    - condition: template
                      value_template: "{{ language == 'en' }}"
                  sequence:
                    - service: "{{ notification_service }}"
                      data:
                        message: "🔴 Smart Climate Management for {{ state_attr(climate_entity, 'friendly_name') }} manually disabled."
                - conditions:
                    - condition: template
                      value_template: "{{ language == 'it' }}"
                  sequence:
                    - service: "{{ notification_service }}"
                      data:
                        message: "🔴 Funzione Gestione Clima Smart per {{ state_attr(climate_entity, 'friendly_name') }} disattivata manualmente."
          - service: "climate.turn_off"
            target:
              entity_id: "{{ climate_entity }}"
          - choose:
            - conditions:
                - condition: template
                  value_template: "{{ language == 'en' }}"
              sequence:
                - service: system_log.write
                  data:
                    message: "Master Enable deactivated for Smart Climate Management {{ state_attr(climate_entity, 'friendly_name') }}. Automation terminated."
                    level: info
            - conditions:
                - condition: template
                  value_template: "{{ language == 'it' }}"
              sequence:
                - service: system_log.write
                  data:
                    message: "Master Enable disattivato per Gestione Clima Smart {{ state_attr(climate_entity, 'friendly_name') }}. Automazione terminata."
                    level: info
      # Disattivazione automatica del master_enable se il clima viene spento manualmente
      - conditions:
          - condition: trigger
            id: "climate_off_manual"
          - condition: template
            value_template: "{{ is_state(master_enable, 'on') }}"
        sequence:
          - service: "input_boolean.turn_off"
            target:
              entity_id: "{{ master_enable }}"
          - if: "{{ enable_notifications and notification_service is not none and notification_service != '' }}"
            then:
              - choose:
                - conditions:
                    - condition: template
                      value_template: "{{ language == 'en' }}"
                  sequence:
                    - service: "{{ notification_service }}"
                      data:
                        message: "⚠️ Manual turn off of {{ state_attr(climate_entity, 'friendly_name') }} detected. 'Smart Climate Management' automation deactivated to prevent conflicts."
                - conditions:
                    - condition: template
                      value_template: "{{ language == 'it' }}"
                  sequence:
                    - service: "{{ notification_service }}"
                      data:
                        message: "⚠️ Rilevato spegnimento manuale di {{ state_attr(climate_entity, 'friendly_name') }}. Automazione 'Gestione Clima Smart' disattivata per prevenire conflitti."

  # Secondo blocco 'choose' per le azioni automatiche (basate su orario e temperatura)
  - choose:
      - conditions:
          - and:
              - condition: template
                value_template: "{{ is_state(master_enable, 'on') }}"
              - condition: template
                value_template: >
                  {% if input_start_time is not none and input_end_time is not none %}
                    {% set start_hour = input_start_time.split(':')[0] | int(0) %}
                    {% set start_minute = input_start_time.split(':')[1] | int(0) %}
                    {% set end_hour = input_end_time.split(':')[0] | int(0) %}
                    {% set end_minute = input_end_time.split(':')[1] | int(0) %}
                    
                    {% set start_minutes = start_hour * 60 + start_minute %}
                    {% set end_minutes = end_hour * 60 + end_minute %}
                    {% set current_time = now().hour * 60 + now().minute %}

                    {% if start_minutes < end_minutes %}
                      {{ current_time >= start_minutes and current_time < end_minutes }}
                    {% else %}
                      {{ current_time >= start_minutes or current_time < end_minutes }}
                    {% endif %}
                  {% else %}
                    true
                  {% endif %}
              - or:
                  - condition: trigger
                    id: ha_start
                  - condition: trigger
                    id: time_start
                  - condition: trigger
                    id: temperature_change
        sequence:
          - if:
              - condition: template
                value_template: "{{ turn_on_temp }}"
            then:
              - service: "climate.set_hvac_mode"
                data:
                  hvac_mode: "{{ initial_mode }}"
                target:
                  entity_id: "{{ climate_entity }}"
              - delay:
                  seconds: 2
              - if:
                  - condition: template
                    value_template: "{{ initial_mode in ['cool', 'heat', 'auto', 'heat_cool'] }}"
                then:
                  - service: "climate.set_temperature"
                    data:
                      temperature: "{{ target_temp }}"
                    target:
                      entity_id: "{{ climate_entity }}"
              - if: "{{ enable_notifications and notification_service is not none and notification_service != '' }}"
                then:
                  - choose:
                    - conditions:
                        - condition: template
                          value_template: "{{ language == 'en' }}"
                      sequence:
                        - service: "{{ notification_service }}"
                          data:
                            title: "Smart Climate Management"
                            message: |
                              {% if trigger.id == 'ha_start' or trigger.id == 'time_start' %}
                                😴 Smart Climate Management activated.
                              {% else %}
                                🌡️ Temperature rising. Reactivating air conditioner.
                              {% endif %}
                    - conditions:
                        - condition: template
                          value_template: "{{ language == 'it' }}"
                      sequence:
                        - service: "{{ notification_service }}"
                          data:
                            title: "Gestione Clima Smart"
                            message: |
                              {% if trigger.id == 'ha_start' or trigger.id == 'time_start' %}
                                😴 Gestione Clima Smart attivata.
                              {% else %}
                                🌡️ Temperatura in rialzo. Riattivazione climatizzatore.
                              {% endif %}
                else:
                  - choose:
                    - conditions:
                        - condition: template
                          value_template: "{{ language == 'en' }}"
                      sequence:
                        - service: system_log.write
                          data:
                            message: "Failed to send reactivation notification: invalid or unconfigured notification service."
                            level: warn
                    - conditions:
                        - condition: template
                          value_template: "{{ language == 'it' }}"
                      sequence:
                        - service: system_log.write
                          data:
                            message: "Tentativo di notifica per riattivazione fallito: servizio di notifica non valido o non configurato."
                            level: warn
      - conditions:
          - and:
              - condition: template
                value_template: "{{ is_state(master_enable, 'on') }}"
              - condition: trigger
                id: temperature_change
              - condition: template
                value_template: "{{ turn_off_temp }}"
              - condition: template
                value_template: >
                  {{ states(climate_entity) != low_power_mode and
                    (state_attr(climate_entity, 'hvac_action') != 'off' or low_power_mode != 'off')
                  }}
        sequence:
          - service: "climate.set_hvac_mode"
            data:
              hvac_mode: "{{ low_power_mode }}"
            target:
              entity_id: "{{ climate_entity }}"
          - if: "{{ enable_notifications and notification_service is not none and notification_service != '' }}"
            then:
              - choose:
                - conditions:
                    - condition: template
                      value_template: "{{ language == 'en' }}"
                  sequence:
                    - service: "{{ notification_service }}"
                      data:
                        title: "Smart Climate Management"
                        message: "🌙 Comfort temperature reached. Climate in low power mode."
                - conditions:
                    - condition: template
                      value_template: "{{ language == 'it' }}"
                  sequence:
                    - service: "{{ notification_service }}"
                      data:
                        title: "Gestione Clima Smart"
                        message: "🌙 Temperatura comfort raggiunta. Clima in modalità a basso consumo."
            else:
              - choose:
                - conditions:
                    - condition: template
                      value_template: "{{ language == 'en' }}"
                  sequence:
                    - service: system_log.write
                      data:
                        message: "Failed to send low power mode notification: invalid or unconfigured notification service."
                        level: warn
                - conditions:
                    - condition: template
                      value_template: "{{ language == 'it' }}"
                  sequence:
                    - service: system_log.write
                      data:
                        message: "Tentativo di notifica per modalità a basso consumo fallito: servizio di notifica non valido o non configurato."
                        level: warn
          - if: "{{ turn_off_timer_eco > 0 }}"
            then:
              - delay: "{{ turn_off_timer_eco | int(0) * 60 }}"
              - service: "climate.turn_off"
                target:
                  entity_id: "{{ climate_entity }}"
              - if: "{{ enable_notifications and notification_service is not none and notification_service != '' }}"
                then:
                  - choose:
                    - conditions:
                        - condition: template
                          value_template: "{{ language == 'en' }}"
                      sequence:
                        - service: "{{ notification_service }}"
                          data:
                            title: "Smart Climate Management"
                            message: "💤 The air conditioner turned off after {{ turn_off_timer_eco | int(0) }} minutes in low power mode."
                    - conditions:
                        - condition: template
                          value_template: "{{ language == 'it' }}"
                      sequence:
                        - service: "{{ notification_service }}"
                          data:
                            title: "Gestione Clima Smart"
                            message: "💤 Il climatizzatore si è spento dopo {{ turn_off_timer_eco | int(0) }} minuti di modalità a basso consumo."

      - conditions:
          - and:
              - condition: template
                value_template: "{{ is_state(master_enable, 'on') }}"
              - condition: trigger
                id: "time_end"
        sequence:
          - choose:
              - conditions:
                  - and:
                    - condition: template
                      value_template: "{{ end_of_time_action == 'off' }}"
                    - condition: template
                      value_template: "{{ turn_off_timer_end > 0 }}"
                sequence:
                  - service: "climate.set_hvac_mode"
                    data:
                      hvac_mode: "fan_only"
                    target:
                      entity_id: "{{ climate_entity }}"
                  - if: "{{ enable_notifications and notification_service is not none and notification_service != '' }}"
                    then:
                      - choose:
                        - conditions:
                            - condition: template
                              value_template: "{{ language == 'en' }}"
                          sequence:
                            - service: "{{ notification_service }}"
                              data:
                                message: >
                                  Smart Climate Management for {{ state_attr(climate_entity, 'friendly_name') }} ended.
                                  The unit will switch to fan mode and turn off in {{ turn_off_timer_end | int(0) }} minutes.
                        - conditions:
                            - condition: template
                              value_template: "{{ language == 'it' }}"
                          sequence:
                            - service: "{{ notification_service }}"
                              data:
                                message: >
                                  Gestione Clima Smart per {{ state_attr(climate_entity, 'friendly_name') }} terminata.
                                  L'unità passerà a ventola e si spegnerà tra {{ turn_off_timer_end | int(0) }} minuti.
                  - delay: "{{ turn_off_timer_end | int(0) * 60 }}"
                  - service: "climate.turn_off"
                    target:
                      entity_id: "{{ climate_entity }}"
                  - if: "{{ enable_notifications and notification_service is not none and notification_service != '' }}"
                    then:
                      - choose:
                        - conditions:
                            - condition: template
                              value_template: "{{ language == 'en' }}"
                          sequence:
                            - service: "{{ notification_service }}"
                              data:
                                message: "💤 The air conditioner turned off at the end of the time window."
                        - conditions:
                            - condition: template
                              value_template: "{{ language == 'it' }}"
                          sequence:
                            - service: "{{ notification_service }}"
                              data:
                                message: "💤 Il climatizzatore si è spento a fine orario."
              - conditions:
                  - condition: template
                    value_template: "{{ end_of_time_action == 'off' }}"
                sequence:
                  - service: "climate.turn_off"
                    target:
                      entity_id: "{{ climate_entity }}"
                  - if: "{{ enable_notifications and notification_service is not none and notification_service != '' }}"
                    then:
                      - choose:
                        - conditions:
                            - condition: template
                              value_template: "{{ language == 'en' }}"
                          sequence:
                            - service: "{{ notification_service }}"
                              data:
                                message: >
                                  Smart Climate Management for {{ state_attr(climate_entity, 'friendly_name') }} ended (End Time: {{ input_end_time if input_end_time is not none else 'manual deactivation' }}). Final mode: {{ end_of_time_action }}.
                        - conditions:
                            - condition: template
                              value_template: "{{ language == 'it' }}"
                          sequence:
                            - service: "{{ notification_service }}"
                              data:
                                message: >
                                  Gestione Clima Smart per {{ state_attr(climate_entity, 'friendly_name') }} terminata (Orario Fine: {{ input_end_time if input_end_time is not none else 'disattivazione manuale' }}). Modalità finale: {{ end_of_time_action }}.
              - conditions:
                  - condition: template
                    value_template: "{{ end_of_time_action != 'off' }}"
                sequence:
                  - service: "climate.set_hvac_mode"
                    data:
                      hvac_mode: "{{ end_of_time_action }}"
                    target:
                      entity_id: "{{ climate_entity }}"
                  - if: "{{ enable_notifications and notification_service is not none and notification_service != '' }}"
                    then:
                      - choose:
                        - conditions:
                            - condition: template
                              value_template: "{{ language == 'en' }}"
                          sequence:
                            - service: "{{ notification_service }}"
                              data:
                                message: >
                                  Smart Climate Management for {{ state_attr(climate_entity, 'friendly_name') }} ended (End Time: {{ input_end_time if input_end_time is not none else 'manual deactivation' }}). Final mode: {{ end_of_time_action }}.
                        - conditions:
                            - condition: template
                              value_template: "{{ language == 'it' }}"
                          sequence:
                            - service: "{{ notification_service }}"
                              data:
                                message: >
                                  Gestione Clima Smart per {{ state_attr(climate_entity, 'friendly_name') }} terminata (Orario Fine: {{ input_end_time if input_end_time is not none else 'disattivazione manuale' }}). Modalità finale: {{ end_of_time_action }}.
            default: []
    default:
      - if:
          - condition: template
            value_template: "{{ is_state(master_enable, 'on') }}"
          - or:
              - condition: trigger
                id: ha_start
              - condition: trigger
                id: time_start
              - condition: trigger
                id: time_periodic_check
              - condition: trigger
                id: master_enable_on
        then:
          - service: system_log.write
            data:
              message: >
                {% if trigger.id == 'ha_start' %}
                  {% if language == 'en' %}Smart Climate Management automation started for {{ state_attr(climate_entity, 'friendly_name') }}. Monitoring temperature.{% elif language == 'it' %}Automazione Gestione Clima Smart avviata per {{ state_attr(climate_entity, 'friendly_name') }}. Monitoraggio temperatura.{% endif %}
                {% elif trigger.id == 'time_start' %}
                  {% if language == 'en' %}Smart Climate Management for {{ state_attr(climate_entity, 'friendly_name') }} activated by schedule ({{ input_start_time | default('Time not specified') }}).{% elif language == 'it' %}Gestione Clima Smart per {{ state_attr(climate_entity, 'friendly_name') }} attivata dall'orario ({{ input_start_time | default('Orario non specificato') }}).{% endif %}
                {% elif trigger.id == 'time_periodic_check' %}
                  {% if language == 'en' %}Periodic climate check for {{ state_attr(climate_entity, 'friendly_name') }} (temp {{ states(temp_sensor) }}°C).{% elif language == 'it' %}Controllo periodico clima per {{ state_attr(climate_entity, 'friendly_name') }} (temp {{ states(temp_sensor) }}°C).{% endif %}
                {% elif trigger.id == 'master_enable_on' %}
                  {% if language == 'en' %}Master Enable activated for Smart Climate Management {{ state_attr(climate_entity, 'friendly_name') }}. Immediate evaluation.{% elif language == 'it' %}Master Enable attivato per Gestione Clima Smart {{ state_attr(climate_entity, 'friendly_name') }}. Valutazione immediata.{% endif %}
                {% endif %}
              level: info

mode: single